From 51a52151ad1058bb50be364e1e38d79eded80832 Mon Sep 17 00:00:00 2001
From: Lon Hohberger <lhh@redhat.com>
Date: Thu, 13 May 2010 13:18:09 -0400
Subject: [PATCH 10/16] modclusterd: Add trap support to SNMP agent

- use ClusterMonitor caching
- update cache from SMNP alarm callback
- check for changes and send traps from SNMP alarm callback

Signed-off-by: Lon Hohberger <lhh@redhat.com>
---
 .../clumon/src/snmp-agent/clusterMonitorSnmp.cpp   |   59 +++++++++++++++++++-
 1 files changed, 58 insertions(+), 1 deletions(-)

diff --git a/ricci/modules/cluster/clumon/src/snmp-agent/clusterMonitorSnmp.cpp b/ricci/modules/cluster/clumon/src/snmp-agent/clusterMonitorSnmp.cpp
index d1768ec..8c89c81 100644
--- a/ricci/modules/cluster/clumon/src/snmp-agent/clusterMonitorSnmp.cpp
+++ b/ricci/modules/cluster/clumon/src/snmp-agent/clusterMonitorSnmp.cpp
@@ -25,9 +25,60 @@
 #include "nodesMIB.h"
 #include "servicesMIB.h"
 #include "clumond_globals.h"
+#include <syslog.h>
+#include "Cluster.h"
+
+using namespace ClusterMonitoring;
 
 ClusterMonitoring::ClusterMonitor monitor;
 
+
+void
+config_update_trap(unsigned int new_version)
+{
+	/* Needs to be addd to ALL snmp notifications I guess? */
+	oid objid_snmptrap[] = { 1, 3, 6, 1, 6, 3, 1, 1, 4, 1, 0 };
+	size_t objid_snmptrap_len = OID_LENGTH(objid_snmptrap);
+
+	oid notification_oid[] = { 1, 3, 6, 1, 4, 1, 2312, 8, 0, 1 };
+	size_t notification_oid_len = OID_LENGTH(notification_oid);
+
+	oid config_version[] = { 1, 3, 6, 1, 4, 1, 2312, 8, 2, 21 };
+	size_t cvlen = OID_LENGTH(config_version);
+
+	netsnmp_variable_list *vars = NULL;
+
+	snmp_varlist_add_variable(&vars, objid_snmptrap, objid_snmptrap_len,
+				  ASN_OBJECT_ID,
+				  (u_char *)notification_oid,
+				  notification_oid_len * sizeof(oid));
+
+	snmp_varlist_add_variable(&vars, config_version, cvlen,
+				  ASN_INTEGER,
+				  (u_char *)&new_version,
+				  sizeof(new_version));
+
+	send_v2trap(vars);
+	snmp_free_varbind(vars);
+}
+
+
+void
+check_cluster_state(unsigned int clientreg, void *clientarg)
+{
+	counting_auto_ptr<Cluster> old_status = monitor.get_cache();
+	counting_auto_ptr<Cluster> cluster = monitor.get_cluster(0);
+
+	if (!old_status.get() || !cluster.get())
+		return;
+
+	if (old_status->config_version() != cluster->config_version()) {
+		// Send configuration version update trap
+		config_update_trap(cluster->config_version());
+	}
+}
+
+
 void
 init_RedHatCluster(void)
 {
@@ -36,6 +87,12 @@ init_RedHatCluster(void)
 		initialize_nodesMIB();
 		initialize_servicesMIB();
 
-		// TODO: initialize others
+		// Cache information forever; let our trap alarm
+		// do all updates.  This polling model is inadequate
+		// and will have to be rewritten eventually.
+		monitor.expire_cache((unsigned int)-1);
+
+    		snmp_alarm_register(5, SA_REPEAT, check_cluster_state, NULL);
+
 	} catch ( ... ) {}
 }
-- 
1.6.2.5

